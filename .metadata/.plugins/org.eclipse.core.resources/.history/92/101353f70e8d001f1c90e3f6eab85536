package main.filter;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.stream.Collectors;

public class queryFilter {

	public static void getQueryStringCount(String queryString, String logFilePath) throws Exception {

		getQueryStringCount(queryString, queryString.length(), logFilePath);
	}

	public static void getQueryStringCount(String queryStartingFrom, int queryStartingCharactersCount, String logFilePath) throws Exception {

		Map<String, Integer> queryMap = new HashMap<>();
		File file = new File(logFilePath);

		BufferedReader br = new BufferedReader(new FileReader(file));

		String line;
		int i = 0;
		while ((line = br.readLine()) != null) {

			if (line.contains("Hibernate:")) {
				int index = line.toUpperCase().indexOf(queryStartingFrom.toUpperCase());
				if (index != -1) {
					String query = line.substring(index, index + queryStartingCharactersCount);
					queryMap.put(query, (queryMap.get(query) == null ? 1 : queryMap.get(query) + 1));
				}
			}
		}

		Map<String, Integer> sortedMap = queryMap.entrySet().stream()
				.sorted(Map.Entry.<String, Integer>comparingByValue().reversed())
				.collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue, (e1, e2) -> e1, LinkedHashMap::new));

		System.out.println("\'" + queryStartingFrom + "\' string occurence are as follows:\n");
		
		for (Map.Entry<String, Integer> entry : sortedMap.entrySet()) {
			System.out.println(entry.getKey() + " =  " + entry.getValue());
		}
		
		System.out.println("\n\n");

	}

}
